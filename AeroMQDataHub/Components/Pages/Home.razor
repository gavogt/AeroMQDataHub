@page "/"

@using System.Text.Json
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Nav

<h1 class="mb-4 text-center">Flight Telemetry</h1>

@if (hubConnection is null)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 200px;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Connecting...</span>
        </div>
        <span class="ms-3">Connecting...</span>
    </div>
}
else if (hubConnection.State != HubConnectionState.Connected)
{
    <div class="alert alert-warning text-center" role="alert">
        <strong>Reconnecting...</strong>
    </div>
}
else
{
    <div class="row g-3 justify-content-center">
        @if (telemetry.Any())
        {
            var t = telemetry[0];
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                <div class="card shadow-sm" style="height:auto; min-height:unset;">
                    <div class="card-header bg-primary text-white">Attitude</div>
                    <div class="card-body text-center p-2">
                        <div class="row mb-1">
                            <div class="col">
                                <div class="fw-bold">Roll</div>
                                <div>@($"{t.Roll:F1}°")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Pitch</div>
                                <div>@($"{t.Pitch:F1}°")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Yaw</div>
                                <div>@($"{t.Yaw:F0}°")</div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col">
                                <div class="fw-bold">Armed</div>
                                <div>@(t.Armed == true ? "Yes" : t.Armed == false ? "No" : "-")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Mode</div>
                                <div>@(t.Mode ?? "-")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Cycle Time</div>
                                <div>@(t.CycleTimeUs?.ToString() ?? "-") <span class="text-muted">us</span></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                <div class="card shadow-sm" style="height:auto; min-height:unset;">
                    <div class="card-header bg-secondary text-white">RC & Baro</div>
                    <div class="card-body text-center p-2">
                        <div class="row mb-1">
                            <div class="col">
                                <div class="fw-bold">RC Roll</div>
                                <div>@(t.RcRoll?.ToString() ?? "-")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">RC Pitch</div>
                                <div>@(t.RcPitch?.ToString() ?? "-")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">RC Yaw</div>
                                <div>@(t.RcYaw?.ToString() ?? "-")</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">RC Throttle</div>
                                <div>@(t.RcThrottle?.ToString() ?? "-")</div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col">
                                <div class="fw-bold">Baro Alt</div>
                                <div>@(t.BaroAltM?.ToString("F2") ?? "-") <span class="text-muted">m</span></div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">VSpeed</div>
                                <div>@(t.VSpeedMs?.ToString("F2") ?? "-") <span class="text-muted">m/s</span></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2 mb-3">
                <div class="card shadow-sm" style="height:auto; min-height:unset;">
                    <div class="card-header bg-info text-white">Voltage</div>
                    <div class="card-body text-center p-2">
                        <span class="display-6">@($"{t.Volts:F2}")</span> <span class="text-muted">V</span>
                        <div class="small">@((t.Mah.HasValue ? $"{t.Mah} mAh" : ""))</div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2 mb-3">
                <div class="card shadow-sm" style="height:auto; min-height:unset;">
                    <div class="card-header bg-info text-white">Current</div>
                    <div class="card-body text-center p-2">
                        <span class="display-6">@($"{t.Amps:F2}")</span> <span class="text-muted">A</span>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                <div class="card shadow-sm h-100">
                    <div class="card-header bg-success text-white">GPS</div>
                    <div class="card-body text-center">
                        <div class="mb-3">
                            <div class="fw-bold mb-1">Coordinates</div>
                            <div class="d-flex flex-column align-items-center">
                                <span class="badge bg-light text-dark mb-1" style="font-size:1.1em;">
                                    <i class="bi bi-geo-alt-fill text-danger"></i>
                                    Lat: <span class="fw-semibold">@t.Lat:F6</span>
                                </span>
                                <span class="badge bg-light text-dark" style="font-size:1.1em;">
                                    <i class="bi bi-geo-alt-fill text-primary"></i>
                                    Lon: <span class="fw-semibold">@t.Lon:F6</span>
                                </span>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col">
                                <div class="fw-bold">Altitude</div>
                                <div>@t.Alt:F1 <span class="text-muted">m</span></div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Satellites</div>
                                <div>@t.Sats</div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Fix</div>
                                <div>@t.Fix</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col">
                                <div class="fw-bold">Speed</div>
                                <div>@(t.GpsSpeedMs?.ToString("F1") ?? "-") <span class="text-muted">m/s</span></div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Course</div>
                                <div>@(t.GpsCourseDeg?.ToString("F1") ?? "-") <span class="text-muted">°</span></div>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Rescue</div>
                                <div>@(t.GpsRescue == true ? "Yes" : t.GpsRescue == false ? "No" : "-")</div>
                            </div>
                        </div>
                        @if (t.Lat != 0 && t.Lon != 0)
                        {
                            <MauiMap Latitude="@t.Lat" Longitude="@t.Lon" Altitude="@t.Alt" />
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info text-center" role="alert">
                    No telemetry data received yet.
                </div>
            </div>
        }
    </div>
}

@code {
    HubConnection? hubConnection;
    public List<Telemetry> telemetry = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:8080/telemetryHub")
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string>("TelemetryUpdate", json =>
        {
            var t = JsonSerializer.Deserialize<Telemetry>(json);
            if (t is not null)
            {
                telemetry.Insert(0, t);
                if (telemetry.Count > 20)
                    telemetry.RemoveAt(telemetry.Count - 1);
                InvokeAsync(StateHasChanged);
            }
        });

        await hubConnection.StartAsync();
    }
}