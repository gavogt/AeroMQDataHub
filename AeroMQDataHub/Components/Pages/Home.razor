@page "/"

@using System.Text.Json
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Nav

<!-- Font Awesome CDN for open, reliable, responsive icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />

<style>
    body, .alien-bg {
        background: linear-gradient(135deg, #0a0826 0%, #1a0033 100%) !important;
        min-height: 100vh;
    }
    .alien-card {
        background: linear-gradient(135deg, #2d0b4e 0%, #0f2027 100%);
        border: 1.5px solid #00fff7;
        box-shadow: 0 0 16px 2px #00fff7a0, 0 0 32px 4px #a259ff40;
        color: #e0e0ff;
    }
    .alien-header {
        background: linear-gradient(90deg, #a259ff 0%, #00fff7 100%);
        color: #fff;
        text-shadow: 0 0 8px #00fff7, 0 0 2px #a259ff;
        border-bottom: 1.5px solid #00fff7;
    }
    .alien-icon, .fa-alien, .fa-gauge, .fa-battery-half, .fa-bolt, .fa-satellite-dish, .fa-location-dot, .fa-lock-open, .fa-lock, .fa-plane, .fa-wind, .fa-signal, .fa-route, .fa-compass, .fa-arrow-up, .fa-arrow-down {
        filter: drop-shadow(0 0 6px #00fff7) drop-shadow(0 0 2px #a259ff);
        color: #00fff7;
        margin-right: 0.25em;
    }
    .alien-badge {
        background: #1a0033;
        color: #00fff7;
        border: 1px solid #a259ff;
        box-shadow: 0 0 8px #a259ff80;
    }
    .alien-label {
        color: #a259ff;
        font-weight: bold;
    }
    .alien-value {
        color: #00fff7;
        font-family: 'Consolas', 'Fira Mono', monospace;
        font-size: 1.1em;
    }
    .kryx-card {
        background: linear-gradient(135deg, #1a0033 0%, #2d0b4e 100%);
        border: 2px solid #a259ff;
        box-shadow: 0 0 24px 2px #00fff7a0, 0 0 48px 8px #a259ff40;
        color: #e0e0ff;
        border-radius: 1.2rem;
        margin-bottom: 2rem;
        padding: 1.5rem 1.5rem 1.2rem 1.5rem;
        display: flex;
        align-items: flex-start;
        gap: 1.5rem;
    }
    .kryx-img {
        width: 96px;
        height: 96px;
        border-radius: 50%;
        object-fit: cover;
        border: 2.5px solid #00fff7;
        box-shadow: 0 0 16px #a259ff80;
        background: #0a0826;
    }
    .kryx-title {
        color: #00fff7;
        font-size: 1.3rem;
        font-weight: bold;
        letter-spacing: 0.04em;
        margin-bottom: 0.2rem;
        text-shadow: 0 0 8px #00fff7, 0 0 2px #a259ff;
    }
    .kryx-story {
        color: #e0e0ff;
        font-size: 1.01rem;
        line-height: 1.5;
        margin-bottom: 0;
        text-shadow: 0 0 4px #1a0033;
    }
    .rc-baro-table {
        width: 100%;
        margin: 0 auto;
        border-collapse: separate;
        border-spacing: 0 0.5rem;
    }
    .rc-baro-table td {
        padding: 0.25rem 0.5rem;
        vertical-align: middle;
        text-align: center;
    }
</style>

<div class="alien-bg" style="min-height:100vh;">
    <div class="container py-3">
        <div class="kryx-card">
            <img src="images/kryx.png" alt="Kryx of Reticula-7" class="kryx-img" />
            <div>
                <div class="kryx-title"><i class="fa-solid fa-alien"></i> Kryx of Reticula-7 (a.k.a. Skater Zeta)</div>
                <div class="kryx-story">
                    Skater Zeta—real name Kryx of Reticula-7—never fit the stiff, council-approved mold back home. He learned balance on a mag-deck, hat always backward, carving neon rails between comm towers. During a maintenance gig, he discovered he could “hear” machines: faint emotional pings from gyros, ESCs, even tired batteries. On Reticula, that knack was called neuro-link resonance. To Kryx, it felt like telepathy with toys.<br><br>
                    When a survey drone went missing over a dust canyon, Kryx followed the anxious hum of its failing IMU, nudged its attitude through sheer focus, and floated it home. Word spread. He started building quads tuned for thought: carbon frames wrapped with psi-mesh, receivers that translated micro-intent into gentle throttle curves. No transmitter—just a calm mind and a skateboarder’s sense of flow.<br><br>
                    He eventually slipped to Earth, drawn by the wild DIY energy of garage labs and park-bench test flights. Here he learned human protocols—MSP, GPS, even something called MQTT—and laughed that your “telemetry hubs” felt like group chats for nervous drones. Now he mentors street pilots: breathe in, picture the line, let the quad’s whisper ride your thoughts. If the link crackles, he flips his cap, grins, and says, “Relax. The drone can hear you. Speak in curves, not commands.”
                </div>
            </div>
        </div>

        <h1 class="mb-4 text-center" style="color:#a259ff;text-shadow:0 0 12px #00fff7;"><i class="fa-solid fa-gauge"></i> Flight Telemetry</h1>

        @if (hubConnection is null)
        {
            <div class="d-flex justify-content-center align-items-center" style="height: 200px;">
                <div class="spinner-border" style="color:#00fff7;"></div>
                <span class="ms-3" style="color:#a259ff;"><i class="fa-solid fa-satellite-dish"></i> Connecting...</span>
            </div>
        }
        else if (hubConnection.State != HubConnectionState.Connected)
        {
            <div class="alert text-center" style="background:#1a0033;color:#00fff7;border:1px solid #a259ff;">
                <strong><i class="fa-solid fa-satellite-dish"></i> Reconnecting...</strong>
            </div>
        }
        else
        {
            <div class="row g-3 justify-content-center">
                @if (telemetry.Any())
                {
                    var t = telemetry[0];
                    <div class="col-12 col-md-6 col-lg-4 mb-3">
                        <div class="card alien-card">
                            <div class="card-header alien-header d-flex align-items-center justify-content-between">
                                <span><i class="fa-solid fa-plane"></i> Attitude</span>
                                <span class="fa-solid fa-compass alien-icon" style="transition: transform 0.5s; transform: rotate(@t.Yaw deg);"></span>
                            </div>
                            <div class="card-body text-center p-2">
                                <div class="row mb-1">
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-arrow-right-arrow-left"></i> Roll</div>
                                        <div class="alien-value">@($"{t.Roll:F1}°")</div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-arrow-up"></i> Pitch</div>
                                        <div class="alien-value">@($"{t.Pitch:F1}°")</div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-compass"></i> Yaw</div>
                                        <div class="alien-value">@($"{t.Yaw:F0}°")</div>
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-lock-open"></i> Armed</div>
                                        <div>
                                            <span class="fa-solid @(t.Armed == true ? "fa-lock-open" : t.Armed == false ? "fa-lock" : "fa-question") alien-icon" style="color:@GetArmedIconColor(t.Armed); vertical-align:middle; transition: color 0.5s;"></span>
                                            <span class="alien-value">@(t.Armed == true ? "Yes" : t.Armed == false ? "No" : "-")</span>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-route"></i> Mode</div>
                                        <div class="alien-value">@(t.Mode ?? "-")</div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-gauge"></i> Cycle Time</div>
                                        <div class="alien-value">@(t.CycleTimeUs?.ToString() ?? "-") <span class="text-muted">us</span></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4 mb-3">
                        <div class="card alien-card">
                            <div class="card-header alien-header"><i class="fa-solid fa-signal"></i> RC &amp; Baro</div>
                            <div class="card-body text-center p-2">
                                <table class="rc-baro-table">
                                    <tr>
                                        <td>
                                            <div class="alien-label"><i class="fa-solid fa-arrow-right-arrow-left"></i> RC Roll</div>
                                            <div class="alien-value">@(t.RcRoll?.ToString() ?? "-")</div>
                                        </td>
                                        <td>
                                            <div class="alien-label"><i class="fa-solid fa-arrow-up"></i> RC Pitch</div>
                                            <div class="alien-value">@(t.RcPitch?.ToString() ?? "-")</div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="alien-label"><i class="fa-solid fa-compass"></i> RC Yaw</div>
                                            <div class="alien-value">@(t.RcYaw?.ToString() ?? "-")</div>
                                        </td>
                                        <td>
                                            <div class="alien-label"><i class="fa-solid fa-arrow-up"></i> RC Throttle</div>
                                            <div class="alien-value">@(t.RcThrottle?.ToString() ?? "-")</div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="alien-label"><i class="fa-solid fa-location-dot"></i> Baro Alt</div>
                                            <div class="alien-value">@(t.BaroAltM?.ToString("F2") ?? "-") <span class="text-muted">m</span></div>
                                        </td>
                                        <td>
                                            <div class="alien-label"><i class="fa-solid fa-wind"></i> VSpeed</div>
                                            <div class="alien-value">@(t.VSpeedMs?.ToString("F2") ?? "-") <span class="text-muted">m/s</span></div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="col-6 col-md-3 col-lg-2 mb-3">
                        <div class="card alien-card">
                            <div class="card-header alien-header"><i class="fa-solid fa-battery-half"></i> Voltage</div>
                            <div class="card-body text-center p-2">
                                <span class="display-6 alien-value">@($"{t.Volts:F2}")</span> <span class="text-muted">V</span>
                                <div class="small alien-label">@((t.Mah.HasValue ? $"{t.Mah} mAh" : ""))</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6 col-md-3 col-lg-2 mb-3">
                        <div class="card alien-card">
                            <div class="card-header alien-header"><i class="fa-solid fa-bolt"></i> Current</div>
                            <div class="card-body text-center p-2">
                                <span class="display-6 alien-value">@($"{t.Amps:F2}")</span> <span class="text-muted">A</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4 mb-3">
                        <div class="card alien-card h-100">
                            <div class="card-header alien-header"><i class="fa-solid fa-location-dot"></i> GPS</div>
                            <div class="card-body text-center">
                                <div class="mb-3">
                                    <div class="alien-label mb-1"><i class="fa-solid fa-location-dot"></i> Coordinates</div>
                                    <div class="d-flex flex-column align-items-center">
                                        <span class="badge alien-badge mb-1" style="font-size:1.1em;">
                                            <i class="fa-solid fa-location-dot"></i>
                                            Lat: <span class="fw-semibold">@t.Lat:F6</span>
                                        </span>
                                        <span class="badge alien-badge" style="font-size:1.1em;">
                                            <i class="fa-solid fa-location-dot" style="color:#a259ff;"></i>
                                            Lon: <span class="fw-semibold">@t.Lon:F6</span>
                                        </span>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-arrow-up"></i> Altitude</div>
                                        <div class="alien-value">@t.Alt:F1 <span class="text-muted">m</span></div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-signal"></i> Satellites</div>
                                        <div class="alien-value">@t.Sats</div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-compass"></i> Fix</div>
                                        <div class="alien-value">@t.Fix</div>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-wind"></i> Speed</div>
                                        <div class="alien-value">@(t.GpsSpeedMs?.ToString("F1") ?? "-") <span class="text-muted">m/s</span></div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-route"></i> Course</div>
                                        <div class="alien-value">@(t.GpsCourseDeg?.ToString("F1") ?? "-") <span class="text-muted">°</span></div>
                                    </div>
                                    <div class="col">
                                        <div class="alien-label"><i class="fa-solid fa-bolt"></i> Rescue</div>
                                        <div class="alien-value">@(t.GpsRescue == true ? "Yes" : t.GpsRescue == false ? "No" : "-")</div>
                                    </div>
                                </div>
                                @if (t.Lat != 0 && t.Lon != 0)
                                {
                                    <MauiMap Latitude="@t.Lat" Longitude="@t.Lon" Altitude="@t.Alt" />
                                }
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-12">
                        <div class="alert text-center" style="background:#1a0033;color:#00fff7;border:1px solid #a259ff;">
                            <i class="fa-solid fa-satellite-dish"></i> No telemetry data received yet.
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    HubConnection? hubConnection;
    public List<Telemetry> telemetry = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:8080/telemetryHub")
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string>("TelemetryUpdate", json =>
        {
            var t = JsonSerializer.Deserialize<Telemetry>(json);
            if (t is not null)
            {
                telemetry.Insert(0, t);
                if (telemetry.Count > 20)
                    telemetry.RemoveAt(telemetry.Count - 1);
                InvokeAsync(StateHasChanged);
            }
        });

        await hubConnection.StartAsync();
    }

    string GetArmedIconColor(bool? armed)
        => armed == true ? "#00fff7" : "#a259ff";
}