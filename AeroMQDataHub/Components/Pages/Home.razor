@page "/"

@using System.Text.Json
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Nav

<style>
    body, .alien-bg {
        background: linear-gradient(135deg, #0a0826 0%, #1a0033 100%) !important;
        min-height: 100vh;
    }
    .alien-card {
        background: linear-gradient(135deg, #2d0b4e 0%, #0f2027 100%);
        border: 1.5px solid #00fff7;
        box-shadow: 0 0 16px 2px #00fff7a0, 0 0 32px 4px #a259ff40;
        color: #e0e0ff;
    }
    .alien-header {
        background: linear-gradient(90deg, #a259ff 0%, #00fff7 100%);
        color: #fff;
        text-shadow: 0 0 8px #00fff7, 0 0 2px #a259ff;
        border-bottom: 1.5px solid #00fff7;
    }
    .alien-icon {
        filter: drop-shadow(0 0 6px #00fff7) drop-shadow(0 0 2px #a259ff);
    }
    .alien-badge {
        background: #1a0033;
        color: #00fff7;
        border: 1px solid #a259ff;
        box-shadow: 0 0 8px #a259ff80;
    }
    .alien-label {
        color: #a259ff;
        font-weight: bold;
    }
    .alien-value {
        color: #00fff7;
        font-family: 'Consolas', 'Fira Mono', monospace;
        font-size: 1.1em;
    }
</style>

<div class="alien-bg" style="min-height:100vh;">
    <h1 class="mb-4 text-center" style="color:#a259ff;text-shadow:0 0 12px #00fff7;">Flight Telemetry</h1>

    @if (hubConnection is null)
    {
        <div class="d-flex justify-content-center align-items-center" style="height: 200px;">
            <div class="spinner-border" style="color:#00fff7;"></div>
            <span class="ms-3" style="color:#a259ff;">Connecting...</span>
        </div>
    }
    else if (hubConnection.State != HubConnectionState.Connected)
    {
        <div class="alert text-center" style="background:#1a0033;color:#00fff7;border:1px solid #a259ff;">
            <strong>Reconnecting...</strong>
        </div>
    }
    else
    {
        <div class="row g-3 justify-content-center">
            @if (telemetry.Any())
            {
                var t = telemetry[0];
                <div class="col-12 col-md-6 col-lg-4 mb-3">
                    <div class="card alien-card">
                        <div class="card-header alien-header d-flex align-items-center justify-content-between">
                            <span>Attitude</span>
                            <span class="iconify alien-icon" data-icon="ph:airplane-tilt" data-width="32" data-height="32" style="@($"transition: transform 0.5s; transform: rotate({t.Yaw}deg);")"></span>
                        </div>
                        <div class="card-body text-center p-2">
                            <div class="row mb-1">
                                <div class="col">
                                    <div class="alien-label">Roll</div>
                                    <div class="alien-value">@($"{t.Roll:F1}°")</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Pitch</div>
                                    <div class="alien-value">@($"{t.Pitch:F1}°")</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Yaw</div>
                                    <div class="alien-value">@($"{t.Yaw:F0}°")</div>
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col">
                                    <div class="alien-label">Armed</div>
                                    <div>
                                        <span class="iconify alien-icon" data-icon="ph:lock-open" data-width="24" data-height="24" style="@($"color:{GetArmedIconColor(t.Armed)}; vertical-align:middle; transition: color 0.5s;")"></span>
                                        <span class="alien-value">@(t.Armed == true ? "Yes" : t.Armed == false ? "No" : "-")</span>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Mode</div>
                                    <div class="alien-value">@(t.Mode ?? "-")</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Cycle Time</div>
                                    <div class="alien-value">@(t.CycleTimeUs?.ToString() ?? "-") <span class="text-muted">us</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4 mb-3">
                    <div class="card alien-card">
                        <div class="card-header alien-header">RC &amp; Baro</div>
                        <div class="card-body text-center p-2">
                            <div class="row mb-1">
                                <div class="col">
                                    <div class="alien-label">RC Roll</div>
                                    <div class="alien-value">@(t.RcRoll?.ToString() ?? "-")</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">RC Pitch</div>
                                    <div class="alien-value">@(t.RcPitch?.ToString() ?? "-")</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">RC Yaw</div>
                                    <div class="alien-value">@(t.RcYaw?.ToString() ?? "-")</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">RC Throttle</div>
                                    <div class="alien-value">@(t.RcThrottle?.ToString() ?? "-")</div>
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col">
                                    <div class="alien-label">Baro Alt</div>
                                    <div class="alien-value">@(t.BaroAltM?.ToString("F2") ?? "-") <span class="text-muted">m</span></div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">VSpeed</div>
                                    <div class="alien-value">@(t.VSpeedMs?.ToString("F2") ?? "-") <span class="text-muted">m/s</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-md-3 col-lg-2 mb-3">
                    <div class="card alien-card">
                        <div class="card-header alien-header">Voltage</div>
                        <div class="card-body text-center p-2">
                            <span class="display-6 alien-value">@($"{t.Volts:F2}")</span> <span class="text-muted">V</span>
                            <div class="small alien-label">@((t.Mah.HasValue ? $"{t.Mah} mAh" : ""))</div>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-md-3 col-lg-2 mb-3">
                    <div class="card alien-card">
                        <div class="card-header alien-header">Current</div>
                        <div class="card-body text-center p-2">
                            <span class="display-6 alien-value">@($"{t.Amps:F2}")</span> <span class="text-muted">A</span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4 mb-3">
                    <div class="card alien-card h-100">
                        <div class="card-header alien-header">GPS</div>
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <div class="alien-label mb-1">Coordinates</div>
                                <div class="d-flex flex-column align-items-center">
                                    <span class="badge alien-badge mb-1" style="font-size:1.1em;">
                                        <i class="bi bi-geo-alt-fill" style="color:#00fff7;"></i>
                                        Lat: <span class="fw-semibold">@t.Lat:F6</span>
                                    </span>
                                    <span class="badge alien-badge" style="font-size:1.1em;">
                                        <i class="bi bi-geo-alt-fill" style="color:#a259ff;"></i>
                                        Lon: <span class="fw-semibold">@t.Lon:F6</span>
                                    </span>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col">
                                    <div class="alien-label">Altitude</div>
                                    <div class="alien-value">@t.Alt:F1 <span class="text-muted">m</span></div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Satellites</div>
                                    <div class="alien-value">@t.Sats</div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Fix</div>
                                    <div class="alien-value">@t.Fix</div>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col">
                                    <div class="alien-label">Speed</div>
                                    <div class="alien-value">@(t.GpsSpeedMs?.ToString("F1") ?? "-") <span class="text-muted">m/s</span></div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Course</div>
                                    <div class="alien-value">@(t.GpsCourseDeg?.ToString("F1") ?? "-") <span class="text-muted">°</span></div>
                                </div>
                                <div class="col">
                                    <div class="alien-label">Rescue</div>
                                    <div class="alien-value">@(t.GpsRescue == true ? "Yes" : t.GpsRescue == false ? "No" : "-")</div>
                                </div>
                            </div>
                            @if (t.Lat != 0 && t.Lon != 0)
                            {
                                <MauiMap Latitude="@t.Lat" Longitude="@t.Lon" Altitude="@t.Alt" />
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col-12">
                    <div class="alert text-center" style="background:#1a0033;color:#00fff7;border:1px solid #a259ff;">
                        No telemetry data received yet.
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    HubConnection? hubConnection;
    public List<Telemetry> telemetry = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:8080/telemetryHub")
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string>("TelemetryUpdate", json =>
        {
            var t = JsonSerializer.Deserialize<Telemetry>(json);
            if (t is not null)
            {
                telemetry.Insert(0, t);
                if (telemetry.Count > 20)
                    telemetry.RemoveAt(telemetry.Count - 1);
                InvokeAsync(StateHasChanged);
            }
        });

        await hubConnection.StartAsync();
    }

    string GetArmedIconColor(bool? armed)
        => armed == true ? "#00fff7" : "#a259ff";
}